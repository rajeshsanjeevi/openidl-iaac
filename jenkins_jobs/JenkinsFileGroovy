#!groovy
import groovy.json.JsonOutput
import groovy.json.JsonSlurper
node {
    def url =
    checkout()
    prepareAWSCode()
    buildAWSInfra()
}
def checkout() {
    stage('Clone') {
        git credentialsId: 'github', branch: "${params.GITHUB_BRANCH}", url: 'https://github.com/rajeshsanjeevi/openidl-iaac.git'
    }
}
def prepareAWSCode() {
    sh '''
        cp ./aws/carrier.tfvars ./aws/aws_resources/carrier.auto.tfvars
        tar -czf aws-content.tar.gz -C aws/aws_resources --exclude .git .
        echo "Successfully prepared the AWS resources code bundle"
    '''
 }
def prepareK8sCode() {
    sh '''
        cp ./aws/carrier.tfvars ./aws/k8s_resources/carrier.auto.tfvars
        tar -czf k8s-content.tar.gz -C aws/k8s_resources --exclude .git .
        echo "Successfully prepared the K8s resources code bundle"
    '''
 }
def buildAWSInfra() {
    stage('AWS-TFPlan') {
        def ws_id = getWorkspaceId()
        def [config_version, upload_url] = createConfig()
        def upload_status = uploadConfig(${upload_url})
        println(${ws_id}, ${config_version}, ${upload_url} )
    }
}
def getWorkspaceId() {
    def response = httpRequest(
        customHeaders: [
                [ name: "Authorization", value: "Bearer " + "${params.TF_BEARER_TOKEN}" ],
                [ name: "Content-Type", value: "application/vnd.api+json" ]
            ],
        url: "https://app.terraform.io/api/v2/organizations/" + "${params.TF_ORGNAME}" + "/workspaces/" + "${params.TF_AWS_WORKSPACE}"
    )
    def data = new JsonSlurper().parseText(response.content)
    println ("Workspace Id: " + data.data.id)
    return data.data.id
}
def createConfig(ws_id) {
    def payload = """
{
  "data": {
    "type": "configuration-versions",
    "attributes": {
      "auto-queue-runs": false
    }
  }
}
    """
     def response = httpRequest(
        customHeaders: [
                [ name: "Authorization", value: "Bearer " + "${params.TF_BEARER_TOKEN}" ],
                [ name: "Content-Type", value: "application/vnd.api+json" ]
            ],
        httpMode: 'POST',
        requestBody: "$payload",
        url: "https://app.terraform.io/api/v2/workspaces/" + "${ws_id}" + "/configuration-versions"
    )
    def data = new JsonSlurper().parseText(response.content)
    println ("Config Version: " + data.data.id)
    def upload_url = data.data.attributes."upload-url"
    println ("Upload URL: " + data.data.attributes."upload-url")
    return [data.data.id, data.data.attributes."upload-url"]
}
def uploadConfig(url) {
         def response = httpRequest(
        customHeaders: [
                [ name: "Authorization", value: "Bearer " + "${params.TF_BEARER_TOKEN}" ],
                [ name: "Content-Type", value: "application/vnd.api+json" ]
            ],
        httpMode: 'POST', responseHandle: 'NONE',
        uploadFile: './aws-content.tar.gz',
        url: "$url"
    )
}
