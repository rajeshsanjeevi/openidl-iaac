def buildType
pipeline {
    agent {
        node {
            label 'openidl'
        }
    }
    parameters {
        string description: 'Organization name of the node', name: 'org_name', trim: true
        string description: 'Environment (dev | test | prod)', name: 'env', trim: true
        choice choices: ['deploy', 'cleanup'], description: 'Choose setup/clean mongodb instance', name: 'action'
        }
    stages {
        stage('Prepare') {
            steps {
                script {
                    if( "${params.action}" == "deploy") {
                        deployMongoDB()
                    } else {
                        cleanupMongoDB()
                    }
                }
            }
        }
    }
    post {
        success {
             echo "The mongoDB ${params.action} action is successful. Review logs"
        }
        failure {
            echo "The mongoDB ${params.action} action is failed, Please investigate"
        }
    }
}
def deployMongoDB(){
    stage('DeployMongoDB') {
        wrap([$class: 'AnsiColorBuildWrapper', colorMapName: "xterm"]) {
            ansibleTower(
                towerServer: 'AWX',
                towerCredentialsId: 'AWX',
                templateType: 'job',
                jobTemplate: "${params.org_name}-${params.env}-openidl-mongodb-deploy",
                jobType: "run",
                towerLogLevel: 'full',
                removeColor: false,
                async: false,
                importTowerLogs: true,
                extraVars: """---
                org_name: '${params.org_name}'
                env: '${params.env}'
                network:
                    org_name: '${params.org_name}'
                """
            )
        }
    }
}
def cleanupMongoDB(){
    stage('CleanupMongoDB') {
        wrap([$class: 'AnsiColorBuildWrapper', colorMapName: "xterm"]) {
            ansibleTower(
                towerServer: 'AWX',
                towerCredentialsId: 'AWX',
                templateType: 'job',
                jobTemplate: "${params.org_name}-${params.env}-openidl-mongodb-cleanup",
                jobType: "run",
                towerLogLevel: 'full',
                importTowerLogs: true,
                removeColor: false,
                async: false,
                extraVars: """---
                org_name: '${params.org_name}'
                env: '${params.env}'
                network:
                    org_name: '${params.org_name}'
                """
            )
        }
    }
}



