---
- hosts: ec2-18-119-105-48.us-east-2.compute.amazonaws.com
  gather_facts: no
  become: true
  tasks:
  - name: Install package dependencies
    package:
      name: "{{ item }}"
      state: present
    with_items:
      - python3
      - unzip

  - name: Download the awscli bundle
    get_url: url=https://s3.amazonaws.com/aws-cli/awscli-bundle.zip dest=/tmp/awscli-bundle.zip
    register: aws_cli_download_bundle

  - name: Unarchive the awscli installer
    unarchive: src=/tmp/awscli-bundle.zip dest=/tmp copy=no creates=/tmp/awscli-bundle
    when: aws_cli_download_bundle.changed
    register: aws_cli_unarchive_installer

  - name: Install awscli package
    shell: python /tmp/awscli-bundle/install -i /usr/local/aws -b /usr/bin/aws
    args:
      creates: /usr/bin/aws
    when: aws_cli_unarchive_installer.changed

  - name: Configure awscli credentials for IAM user
    shell: aws configure set {{ item.key }} {{ item.value }} --profile cicd-user
    no_log: True
    with_dict:
      aws_access_key_id: "{{ aws_access_key }}"
      aws_secret_access_key: "{{ aws_secret_key }}"
      region: "{{ aws_region }}"
      format: "table"
      external_id: "{{ aws_external_id }}"
    changed_when: false

  - name: Configure awscli credentials for IAM role
    shell: aws configure set {{ item.key }} {{ item.value }} --profile cicd-role
    no_log: True
    with_dict:
      external_id: "{{ aws_external_id }}"
      source_profile: "cicd-user"
      role_arn: "{{ aws_iam_role }}"
    changed_when: false

  - name: Test AWS CLI is working
    shell: export AWS_PROFILE=cicd-role; aws sts get-caller-identity
    register: aws_caller_identity

  - name: Setup kubectl utility
    shell: |
      curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
      chmod +x kubectl
      mv ./kubectl /usr/local/bin
    register: kubectl_setup

  - name: Update kubeconfig and set context to openidl application cluster
    shell: export AWS_PROFILE=cicd-role; aws eks update-kubeconfig --region {{ aws_region }} --name {{ app_cluster_name }}
    register: app_cluster_context_set

  - name: Create a k8s namespace
    kubernetes.core.k8s:
      name: database
      api_version: v1
      kind: Namespace
      state: present



