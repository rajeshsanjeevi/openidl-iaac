- name: mongodb-helm-deployment
  hosts: localhost
  become: False
  vars_files:
    - ./group_vars/mongodb/vars.yaml

  tasks:
    - name: Getting list of clusters
      shell: |
        aws eks list-clusters --region {{ region }}

    - name: Getting kube config file
      shell: |
        aws eks --region {{ region }} update-kubeconfig --name {{ clustername }}

    - name: Getting list of files in .kube folder
      shell: ls -ltra ~/.kube/
      register: dir_contents

    - name: Retrieve helm binary archive
      unarchive:
        src: https://get.helm.sh/helm-v3.2.1-linux-amd64.tar.gz
        dest: /tmp
        creates: /usr/local/bin/helm
        remote_src: yes

    - name: Move helm binary into place
      command: cp /tmp/linux-amd64/helm /usr/local/bin/helm
      args:
        creates: /usr/local/bin/helm

    - name: Verify helm installation
      command: "helm version --client --short"
      changed_when: false
      tags:
        - Verify helm installation

    - name: mongodb Helm chart repo
      shell: |
        helm repo add bitnami https://charts.bitnami.com/bitnami
      tags:
        - mongodb
        - aais-mongodb-helm
        - aais-mongodb

    - name: Create a k8s namespace for mongodb database
      k8s:
        name: database1
        api_version: v1
        kind: Namespace
        state: present
      ignore_errors: false

    - name: Changing the current context namespace to mongodb namespace
      shell: |
        KUBECONFIG={{ kubeconfig_file }} kubectl config set-context --current --namespace={{ mongodb_namespace }}

    - name: Install mongodb helm chart
      shell: |
        helm install {{ mongodb_helmchart_name }} bitnami/mongodb \
        --set architecture={{ mongodb_architecture_type }} \
        --set useStatefulSet={{ mongodb_useStatefulSet }} \
        --set service.type={{ mongodb_service_type }} \
        --set service.port={{ mongodb_service_port }} \
        --set auth.enabled={{ mongodb_auth_enabled }} \
        --set auth.rootPassword="{{ mongodb_auth_rootPassword }}" \
        --set auth.username="{{ mongodb_auth_username }}" \
        --set auth.password="{{ mongodb_auth_password }}" \
        --set auth.database="{{ mongodb_auth_database }}" \
        --set persistence.enabled={{ mongodb_persistence_enabled }} \
        --set persistence.size={{ mongodb_persistence_size }} \
        --set persistence.mountPath={{ mongodb_persistence_mountPath }} \
        --set persistence.storageClass="{{ mongodb_persistence_storageClass }}" \
        --set serviceAccount.create={{ mongodb_serviceAccount_create }} \
        --set serviceAccount.name="{{ mongodb_serviceAccount_name }}" \
        --set service.portName={{ mongodb_service_portName }} \
        --set externalAccess.service.type={{ mongodb_externalAccess_service_type }} \
        --set externalAccess.service.port={{ mongodb_externalAccess_service_port }} \
        --set externalAccess.enabled={{ mongodb_externalAccess_enabled }} \
        --set replicaSetHostnames={{ mongodb_replicaSetHostnames }} \
        --set replicaCount={{ mongodb_replicaCount }} \
        --set tls.enabled={{ mongodb_tls_enabled }} \
        --set readinessProbe.enabled={{ mongodb_readinessProbe_enabled }} \
        --set readinessProbe.initialDelaySeconds={{ mongodb_readinessProbe_initialDelaySeconds }} \
        --set arbiter.livenessProbe.enabled={{ mongodb_arbiter_livenessProbe_enabled }} \
        --set arbiter.readinessProbe.initialDelaySeconds={{ mongodb_arbiter_readinessProbe_initialDelaySeconds }} \
        --set global.namespaceOverride={{ mongodb_namespace }}
      tags:
        - mongodb
        - mongodb-helm-repo

    - name: delete kube config
      file:
        path: ~/.kube/config
        state: absent